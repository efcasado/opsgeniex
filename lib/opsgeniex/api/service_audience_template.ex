# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Opsgeniex.Api.ServiceAudienceTemplate do
  @moduledoc """
  API calls for all endpoints tagged `ServiceAudienceTemplate`.
  """

  alias Opsgeniex.Connection
  import Opsgeniex.RequestBuilder

  @doc """
  Retrieve the service audience template
  Returns the audience template of a service

  ### Parameters

  - `connection` (Opsgeniex.Connection): Connection to server
  - `identifier` (String.t): Identifier of the service
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Opsgeniex.Model.GetServiceAudienceTemplateResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_service_audience_template(Tesla.Env.client, String.t, keyword()) :: {:ok, Opsgeniex.Model.GetServiceAudienceTemplateResponse.t} | {:ok, Opsgeniex.Model.ErrorResponse.t} | {:error, Tesla.Env.t}
  def get_service_audience_template(connection, identifier, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/v1/services/#{identifier}/audience-templates")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Opsgeniex.Model.GetServiceAudienceTemplateResponse},
      {400, Opsgeniex.Model.ErrorResponse},
      {401, Opsgeniex.Model.ErrorResponse},
      {402, Opsgeniex.Model.ErrorResponse},
      {403, Opsgeniex.Model.ErrorResponse},
      {404, Opsgeniex.Model.ErrorResponse},
      {422, Opsgeniex.Model.ErrorResponse},
      {429, Opsgeniex.Model.ErrorResponse},
      {:default, Opsgeniex.Model.ErrorResponse}
    ])
  end

  @doc """
  Partial update service audience template
  Partial update service audience template

  ### Parameters

  - `connection` (Opsgeniex.Connection): Connection to server
  - `identifier` (String.t): Identifier of the service
  - `opts` (keyword): Optional parameters
    - `:body` (PartialUpdateServiceAudienceTemplatePayload): Request payload of service audience template

  ### Returns

  - `{:ok, Opsgeniex.Model.PartialUpdateServiceAudienceTemplateResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec partial_update_service_audience_template(Tesla.Env.client, String.t, keyword()) :: {:ok, Opsgeniex.Model.PartialUpdateServiceAudienceTemplateResponse.t} | {:ok, Opsgeniex.Model.ErrorResponse.t} | {:error, Tesla.Env.t}
  def partial_update_service_audience_template(connection, identifier, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:patch)
      |> url("/v1/services/#{identifier}/audience-templates")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Opsgeniex.Model.PartialUpdateServiceAudienceTemplateResponse},
      {400, Opsgeniex.Model.ErrorResponse},
      {401, Opsgeniex.Model.ErrorResponse},
      {402, Opsgeniex.Model.ErrorResponse},
      {403, Opsgeniex.Model.ErrorResponse},
      {404, Opsgeniex.Model.ErrorResponse},
      {422, Opsgeniex.Model.ErrorResponse},
      {429, Opsgeniex.Model.ErrorResponse},
      {:default, Opsgeniex.Model.ErrorResponse}
    ])
  end
end
