# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Opsgeniex.Model.BaseAlert do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :tinyId,
    :alias,
    :message,
    :status,
    :acknowledged,
    :isSeen,
    :tags,
    :snoozed,
    :snoozedUntil,
    :count,
    :lastOccurredAt,
    :createdAt,
    :updatedAt,
    :source,
    :owner,
    :priority,
    :teams,
    :integration,
    :report
  ]

  @type t :: %__MODULE__{
    :id => String.t,
    :tinyId => String.t | nil,
    :alias => String.t | nil,
    :message => String.t | nil,
    :status => String.t | nil,
    :acknowledged => boolean() | nil,
    :isSeen => boolean() | nil,
    :tags => [String.t] | nil,
    :snoozed => boolean() | nil,
    :snoozedUntil => DateTime.t | nil,
    :count => integer() | nil,
    :lastOccurredAt => DateTime.t | nil,
    :createdAt => DateTime.t | nil,
    :updatedAt => DateTime.t | nil,
    :source => String.t | nil,
    :owner => String.t | nil,
    :priority => String.t | nil,
    :teams => [Opsgeniex.Model.AlertTeamMeta.t] | nil,
    :integration => Opsgeniex.Model.AlertIntegration.t | nil,
    :report => Opsgeniex.Model.AlertReport.t | nil
  }

  alias Opsgeniex.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:snoozedUntil, :datetime, nil)
     |> Deserializer.deserialize(:lastOccurredAt, :datetime, nil)
     |> Deserializer.deserialize(:createdAt, :datetime, nil)
     |> Deserializer.deserialize(:updatedAt, :datetime, nil)
     |> Deserializer.deserialize(:teams, :list, Opsgeniex.Model.AlertTeamMeta)
     |> Deserializer.deserialize(:integration, :struct, Opsgeniex.Model.AlertIntegration)
     |> Deserializer.deserialize(:report, :struct, Opsgeniex.Model.AlertReport)
  end
end

